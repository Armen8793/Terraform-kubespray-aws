apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ include "blazor-app-front.fullname" . }}-deployment"
  labels:
    {{- include "blazor-app-front.labels" . | nindent 4 }}
    app: {{ template "blazor-app-front.name" . }}
    chart: {{ template "blazor-app-front.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    kindofrole: {{ .Values.label.kindofrole }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "blazor-app-front.selectorLabels" . | nindent 6 }}
      app: {{ template "blazor-app-front.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "blazor-app-front.selectorLabels" . | nindent 8 }}
        app: {{ template "blazor-app-front.name" . }}
        release: {{ .Release.Name }}
        kindofrole: {{ .Values.label.kindofrole }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: "{{ include "blazor-app-front.serviceAccountName" . }}-serviceaccount"
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if or .Values.env.enable .Values.envSecrets.enable }}
          env:
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- $relname := .Release.Name -}}
            {{- range $key, $value := .Values.secrets }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: "{{ $relname }}-secret"
                  key: {{ $key | quote }}
            {{- end }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.probes.liveness.url }}
              port: {{ .Values.probes.liveness.port }}
            initialDelaySeconds: 120
            periodSeconds: 120
          readinessProbe:
            httpGet:
              path: {{ .Values.probes.readiness.url }}
              port: {{ .Values.probes.readiness.port }}
            initialDelaySeconds: 25
            periodSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
